openapi: 3.0.1
info:
  title: API Music Player
  description: Esta API disponibiliza endPoint para o gerenciamento de musicas.
  version: '1.0'
servers:
  - url: http://localhost:5000
security:
  - apiKeyAuth: []  # Especifica o esquema de seguran√ßa apiKeyAuth globalmente
paths:
  /api/v1/musicas/{id}:
    get:
      tags:
        - musica-controller
      operationId: buscarPorId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Musica'
    put:
      tags:
        - musica-controller
      operationId: atualizar
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Musica'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Musica'
    delete:
      tags:
        - musica-controller
      operationId: excluir
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/v1/autores/{id}:
    get:
      tags:
        - autor-controller
      operationId: buscarPorId_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Autor'
    put:
      tags:
        - autor-controller
      operationId: atualizar_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Autor'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Autor'
    delete:
      tags:
        - autor-controller
      operationId: excluir_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/v1/musicas/salvar:
    post:
      tags:
        - musica-controller
      operationId: salvar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Musica'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Musica'
  /api/v1/autores/salvar:
    post:
      tags:
        - autor-controller
      operationId: salvar_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Autor'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Autor'
  /api/v1/musicas:
    get:
      tags:
        - musica-controller
      operationId: listarTodos
      parameters:
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
        - name: nomeAutor
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageMusicaResource'
  /api/v1/musicas/:
    get:
      tags:
        - musica-controller
      operationId: listarTodos_1
      parameters:
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageMusica'
  /api/v1/autores/:
    get:
      tags:
        - autor-controller
      operationId: listarTodos_2
      parameters:
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageAutor'
components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
  schemas:
    Autor:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        musicas:
          type: array
          items:
            $ref: '#/components/schemas/Musica'
    Musica:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        urlMusica:
          type: string
        dataLancamento:
          type: string
          format: date-time
        autor:
          $ref: '#/components/schemas/Autor'
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    Link:
      type: object
      properties:
        rel:
          type: string
        href:
          type: string
        hreflang:
          type: string
        media:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
    MusicaResource:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        urlMusica:
          type: string
        dataLancamento:
          type: string
          format: date-time
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    PageMusicaResource:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/MusicaResource'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        unsorted:
          type: boolean
        sorted:
          type: boolean
    PageMusica:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Musica'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    PageAutor:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Autor'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
